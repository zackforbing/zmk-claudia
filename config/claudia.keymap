#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&soft_off { hold-time-ms = <5000>; };

/ {
    combos {
        compatible = "zmk,combos";

        left_enter {
            bindings = <&kp ENTER>;
            key-positions = <1 12 23>;
        };

        right_enter {
            bindings = <&kp ENTER>;
            key-positions = <8 17 26>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <3 14>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <2 13>;
        };

        hold_space {
            bindings = <&kp SPACE>;
            key-positions = <31 23>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <14 15>;
        };

        toggle_nav {
            bindings = <&tog 2>;
            key-positions = <11 2 13>;
            layers = <0 2>;
            require-prior-idle-ms = <350>;
        };

        jsdoc {
            bindings = <&jsdoc>;
            key-positions = <29 28>;
        };

        caps_lock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <13 12 16 17>;
        };

        screen_shot {
            bindings = <&kp LS(LG(S))>;
            key-positions = <0 11>;
        };

        reset {
            bindings = <&sys_reset>;
            key-positions = <0 31 32 9>;
        };

        bootloader {
            bindings = <&bootloader>;
            key-positions = <4 14 5 15>;
        };
    };

    behaviors {
        hm: HOMEROW_MODS {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <200>;
        };

        hs: HOMEROW_SHIFT {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            require-prior-idle-ms = <100>;
        };

        esc: esc {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp ESC>;

            tapping-term-ms = <200>;
        };

        tab: tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB";
            #binding-cells = <0>;
            bindings = <&mt LCTRL ENTER>, <&kp TAB>;

            tapping-term-ms = <250>;
        };
    };

    macros {
        jsdoc: jsdoc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp FSLH &kp STAR &kp STAR &kp SPACE>;
            label = "JSDOC";
        };

        pw: pw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Y) &kp F &kp LS(P) &kp N2 &kp N7 &kp E &kp X &kp AT &kp N4 &kp PRCNT &kp N4 &kp LS(V) &kp LS(E) &kp LS(F) &kp LS(T)>;
            label = "PW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp Q           &kp W           &kp E        &kp R             &kp T    &kp Y            &kp U        &kp I         &kp O            &kp P
&hm LEFT_GUI A  &hm LEFT_ALT S  &hm LCTRL D  &hs LEFT_SHIFT F  &kp G    &kp H            &hs RSHFT J  &hm RCTRL K   &hm RIGHT_ALT L  &hm RMETA SQT
&hs LSHFT Z     &kp X           &kp C        &kp V             &kp B    &kp N            &kp M        &kp COMMA     &kp DOT          &hs RSHFT FSLH
                                &lt 2 TAB    &lt 1 SPACE                &lt 2 BACKSPACE               &lt 1 DELETE
            >;
        };

        NUM+FUNC {
            bindings = <
&kp NUMBER_1     &kp NUMBER_2     &kp NUMBER_3     &kp NUMBER_4   &kp N5        &trans     &kp F9                  &kp F10       &kp F11           &kp F12
&hm LEFT_GUI N6  &hm LEFT_ALT N7  &hm LCTRL N8     &hs LSHFT N9   &kp N0        &trans     &hm RIGHT_SHIFT LG(F5)  &hm RCTRL F6  &hm RIGHT_ALT F7  &hm RIGHT_GUI F8
&kp KP_PLUS      &kp KP_MINUS     &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp KP_DOT    &trans     &kp F1                  &kp F2        &kp F3            &kp F4
                                  &lt 3 LS(TAB)    &trans                       &lt 4 TAB                          &trans
            >;
        };

        NAV {
            bindings = <
&mt LEFT_SHIFT PAGE_UP  &mt LEFT_ALT HOME  &mt LS(LCTRL) UP_ARROW  &mt LALT END  &kp LS(LA(LC(BACKSLASH)))    &trans  &kp F9  &kp F10      &kp F11          &kp F12
&mt LCTRL PAGE_DOWN     &kp LEFT           &kp DOWN                &kp RIGHT     &kp BACKSPACE                &trans  &kp F5  &kp F6       &kp KP_NUMBER_6  &kp KP_MINUS
&kp LC(Z)               &kp LC(X)          &kp LC(C)               &kp LC(V)     &kp LS(LC(K))                &trans  &kp F1  &kp F2       &kp F3           &kp F4
                                           &trans                  &kp ENTER                                  &trans          &lt 3 ENTER
            >;
        };

        ADJ {
            bindings = <
&kp BSLH   &trans    &trans  &trans  &kp PERCENT    &trans    &trans     &kp STAR           &kp MINUS      &kp LBKT
&trans     &trans    &trans  &trans  &trans         &kp EXCL  &kp CARET  &kp AMPS           &kp QMARK      &kp SQT
&kp LSHFT  &kp LALT  &trans  &trans  &trans         &trans    &trans     &kp LA(LS(EQUAL))  &kp LA(EQUAL)  &kp RBKT
                     &trans  &trans                 &trans               &trans
            >;
        };

        FUN {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp CARET  &kp AMPS   &kp STAR   &kp LPAR  &kp RPAR
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5          &kp F6     &kp F7     &kp F8     &kp F9    &kp F10
&kp LSHFT     &kp LALT      &out OUT_TOG  &bt BT_CLR    &sys_reset      &trans     &kp EQUAL  &kp CARET  &kp AMPS  &kp QMARK
                            &trans        &trans                        &trans                &trans
            >;
        };
    };
};
